// <auto-generated />
using System;
using Interventions.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Interventions.Migrations
{
    [DbContext(typeof(InterventionsDbContext))]
    partial class InterventionsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Interventions.Entities.Probleme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateProbleme")
                        .HasColumnType("datetime2");

                    b.Property<string>("courriel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courrielConfirmation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noTypeProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noUnite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Problemes");
                });

            modelBuilder.Entity("Interventions.Entities.TypeProbleme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descriptionTypeProbleme")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TypesProbleme");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            descriptionTypeProbleme = "Problème d'écran"
                        },
                        new
                        {
                            Id = 2,
                            descriptionTypeProbleme = "Problème avec le disque dur"
                        },
                        new
                        {
                            Id = 3,
                            descriptionTypeProbleme = "Problème de connexion réseau"
                        },
                        new
                        {
                            Id = 4,
                            descriptionTypeProbleme = "Problème avec la souris"
                        },
                        new
                        {
                            Id = 5,
                            descriptionTypeProbleme = "Problème de clavier"
                        },
                        new
                        {
                            Id = 6,
                            descriptionTypeProbleme = "Problème d'ouverture du logiciel Ms-Word"
                        },
                        new
                        {
                            Id = 7,
                            descriptionTypeProbleme = "Problème d'ouverture du logiciel Ms-Excel"
                        },
                        new
                        {
                            Id = 8,
                            descriptionTypeProbleme = "Problème d'imprimante"
                        },
                        new
                        {
                            Id = 9,
                            descriptionTypeProbleme = "Problème entre la chaise et le clavier..."
                        },
                        new
                        {
                            Id = 10,
                            descriptionTypeProbleme = "Autre"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
